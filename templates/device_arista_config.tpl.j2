{% set ns = namespace(loopback_intf_name=None, loopback_ip=None, management_intf_name=None, management_ip=None, ntp_servers=[], name_servers=[]) %}
{% if data.DcimDevice.edges and data.DcimDevice.edges is iterable %}
{%   for intf in data.DcimDevice.edges[0].node.interfaces.edges %}
{%      if intf.node.role.value == "loopback" %}
{%         set ns.loopback_intf_name = intf.node.name.value %}
{%         if intf.node.ip_addresses.edges %}
{%            set ns.loopback_ip = intf.node.ip_addresses.edges[0].node.address.ip %}
{%         endif %}
{%      elif intf.node.role.value == "management" %}
{%         set ns.management_intf_name = intf.node.name.value %}
{%         if intf.node.ip_addresses.edges %}
{%            set ns.management_ip = intf.node.ip_addresses.edges[0].node.address.ip %}
{%            if intf.node.ip_addresses.edges[0].node.ip_prefix %}
{%               set network_address = intf.node.ip_addresses.edges[0].node.ip_prefix.node.prefix.network_address %}
{%               set octets = broadcast_address.split('.') %}
{%               set last_octet = octets[3] | int + 1 %}
{%               set ns.management_gw_ip = octets[0] ~ '.' ~ octets[1] ~ '.' ~ octets[2] ~ '.' ~ last_octet | string %}
{%            endif %}
{%         endif %}
{%      endif %}
{%   endfor %}
vlan internal order ascending range 1006 1199
!
transceiver qsfp default-mode 4x10G
!
service routing protocols model multi-agent
!
hostname {{ data.DcimDevice.edges[0].node.name.value }}
dns domain atd.lab
!
spanning-tree mode mstp
no spanning-tree vlan-id 4093-4094
spanning-tree mst 0 priority 16384
!
no enable password
no aaa root
!
! Interface Configuration
{%   for intf in data.DcimDevice.edges[0].node.interfaces.edges %}
interface {{ intf.node.name.value }}
{%      if intf.node.description.value %}
   description "{{ intf.node.description.value }}"
{%      endif %}
{%      if intf.node.mtu.value %}
   mtu {{ intf.node.mtu.value }}
{%      endif %}
{%      if intf.node.ip_addresses %}
{%         for ip in intf.node.ip_addresses.edges %}
   ip address {{ ip.node.address.value  }}
   no switchport
{%            if intf.node.role.value == "peer" or intf.node.role.value == "backbone" %}
   ip ospf network point-to-point
{%            endif %}
{%         endfor %}
{%      else %}
   switchport mode trunk
{%         if intf.node.tagged_vlan %}
   switchport trunk native vlan {{ intf.node.untagged_vlan.node.vlan_id.value }}
{%         endif %}
{%         if intf.node.tagged_vlan %}
   switchport trunk allowed vlan {% for tagged_vlan in intf.node.tagged_vlan.edges %} {{ tagged_vlan.node.vlan_id.value }}{% if not loop.last %}, {% endif %}{% endfor %}

{%         endif %}
{%         if intf.node.role.value == "server" %}
   spanning-tree portfast
{%         endif %}
{%      endif %}
!
{%   endfor %}
!
ip routing
!
ip route 0.0.0.0/0 {{ ns.management_gw_ip }}
!
management api http-commands
   protocol https
   no shutdown
   !
   vrf default
      no shutdown
!
end
{% else %}
{# Warning: No Device found with this name #}
{% endif %}
